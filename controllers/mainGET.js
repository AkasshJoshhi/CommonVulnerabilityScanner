var fs = require('fs')
var path = require('path');
async function corsFunc(req,res){res.send("response success")}
async function hhiFunc(req,res){res.send("response success")}
async function dmhttpFunc(req,res){res.send("response success")}

async function subtakeFunc(req,res){res.send("response success")}
async function ctpFunc(req,res){res.send("response success")}
async function cfcFunc(req,res){res.send("response success")}

async function orcFunc(req,res){res.send("response success")}
async function sslTestFunc(req,res){res.send("response success")}
async function psesFunc(req,res){res.send("response success")}

async function deleteDomainName(updatedDataObj,domainName){
    for( var i = 0; i < updatedDataObj.domainArray.length; i++){ 
        if ( updatedDataObj.domainArray[i] === domainName) 
        { 
            updatedDataObj.domainArray.splice(i, 1); 
        }
    }
}

async function deleteTargetData(updatedDataObj,domainName){
    await deleteDomainName(updatedDataObj,domainName);
    delete updatedDataObj.subd["probedSubd"][`${domainName}`];
    delete updatedDataObj.subd["enumSubd"][`${domainName}`];
    expAndChecklistObjectKeys = Object.keys(updatedDataObj.exploits);
//  ^^^ checklistObjectKeys = exploitObjectKeys;

    expAndChecklistObjectKeys.forEach(element => {
        delete updatedDataObj[`exploits`][`${element}`][`${domainName}`];  // Object for exploits
        delete updatedDataObj[`checklist`][`${element}`][`${domainName}`]; // Array for checklisting
    });
}
async function writeUpdate2Original(jsonDbFilePath,updatedDataObj,domainName,res){
    await deleteTargetData(updatedDataObj,domainName);

    fs.writeFileSync(jsonDbFilePath,JSON.stringify(updatedDataObj), 'utf-8');
    console.log(updatedDataObj)
    res.sendFile(path.resolve(jsonDbFilePath));
    
}
async function deleteTarget(domainName,res){
    var jsonDbFilePath = require('../config/config').database.dbFilePath;
    var dbData = JSON.parse(fs.readFileSync(jsonDbFilePath,'utf-8'));
    var updatedDataObj={...dbData};
    await writeUpdate2Original(jsonDbFilePath,updatedDataObj,domainName,res);
}

async function masterCFunc(req,res){

}
 module.exports={corsFunc,
 hhiFunc,
 dmhttpFunc,
 subtakeFunc,
 ctpFunc,
 cfcFunc,
 orcFunc,
 sslTestFunc,
 psesFunc,
deleteTarget,
masterCFunc}